/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * TMDB API
 * OpenAPI spec version: 3
 */
import type {
  AccountAddFavorite200,
  AccountAddFavoriteBody,
  AccountAddFavoriteParams,
  AccountAddToWatchlist200,
  AccountAddToWatchlistBody,
  AccountAddToWatchlistParams,
  AccountDetails200,
  AccountDetailsParams,
  AccountFavoriteTv200,
  AccountFavoriteTvParams,
  AccountGetFavorites200,
  AccountGetFavoritesParams,
  AccountLists200,
  AccountListsParams,
  AccountRatedMovies200,
  AccountRatedMoviesParams,
  AccountRatedTv200,
  AccountRatedTvEpisodes200,
  AccountRatedTvEpisodesParams,
  AccountRatedTvParams,
  AccountWatchlistMovies200,
  AccountWatchlistMoviesParams,
  AccountWatchlistTv200,
  AccountWatchlistTvParams,
  AlternativeNamesCopy200,
  AuthenticationCreateGuestSession200,
  AuthenticationCreateRequestToken200,
  AuthenticationCreateSession200,
  AuthenticationCreateSessionBody,
  AuthenticationCreateSessionFromLogin200,
  AuthenticationCreateSessionFromLoginBody,
  AuthenticationCreateSessionFromV4Token200,
  AuthenticationCreateSessionFromV4TokenBody,
  AuthenticationDeleteSession200,
  AuthenticationDeleteSessionBody,
  AuthenticationValidateKey200,
  CertificationMovieList200,
  CertificationsTvList200,
  ChangesMovieList200,
  ChangesMovieListParams,
  ChangesPeopleList200,
  ChangesPeopleListParams,
  ChangesTvList200,
  ChangesTvListParams,
  CollectionDetails200,
  CollectionDetailsParams,
  CollectionImages200,
  CollectionImagesParams,
  CollectionTranslations200,
  CompanyAlternativeNames200,
  CompanyDetails200,
  CompanyImages200,
  ConfigurationCountries200Item,
  ConfigurationCountriesParams,
  ConfigurationDetails200,
  ConfigurationJobs200Item,
  ConfigurationLanguages200Item,
  ConfigurationTimezones200Item,
  CreditDetails200,
  DetailsCopy200,
  DiscoverMovie200,
  DiscoverMovieParams,
  DiscoverTv200,
  DiscoverTvParams,
  FindById200,
  FindByIdParams,
  GenreMovieList200,
  GenreMovieListParams,
  GenreTvList200,
  GenreTvListParams,
  GuestSessionRatedMovies200,
  GuestSessionRatedMoviesParams,
  GuestSessionRatedTv200,
  GuestSessionRatedTvEpisodes200,
  GuestSessionRatedTvEpisodesParams,
  GuestSessionRatedTvParams,
  KeywordDetails200,
  KeywordMovies200,
  KeywordMoviesParams,
  ListAddMovie200,
  ListAddMovieBody,
  ListAddMovieParams,
  ListCheckItemStatus200,
  ListCheckItemStatusParams,
  ListClear200,
  ListClearParams,
  ListCreate200,
  ListCreateBody,
  ListCreateParams,
  ListDelete200,
  ListDeleteParams,
  ListDetails200,
  ListDetailsParams,
  ListRemoveMovie200,
  ListRemoveMovieBody,
  ListRemoveMovieParams,
  ListsCopy200,
  ListsCopyParams,
  MovieAccountStates200,
  MovieAccountStatesParams,
  MovieAddRating200,
  MovieAddRatingBody,
  MovieAddRatingParams,
  MovieAlternativeTitles200,
  MovieAlternativeTitlesParams,
  MovieChanges200,
  MovieChangesParams,
  MovieCredits200,
  MovieCreditsParams,
  MovieDeleteRating200,
  MovieDeleteRatingParams,
  MovieDetails200,
  MovieDetailsParams,
  MovieExternalIds200,
  MovieImages200,
  MovieImagesParams,
  MovieKeywords200,
  MovieLatestId200,
  MovieLists200,
  MovieListsParams,
  MovieNowPlayingList200,
  MovieNowPlayingListParams,
  MoviePopularList200,
  MoviePopularListParams,
  MovieRecommendations200,
  MovieRecommendationsParams,
  MovieReleaseDates200,
  MovieReviews200,
  MovieReviewsParams,
  MovieSimilar200,
  MovieSimilarParams,
  MovieTopRatedList200,
  MovieTopRatedListParams,
  MovieTranslations200,
  MovieUpcomingList200,
  MovieUpcomingListParams,
  MovieVideos200,
  MovieVideosParams,
  MovieWatchProviders200,
  NetworkDetails200,
  PersonChanges200,
  PersonChangesParams,
  PersonCombinedCredits200,
  PersonCombinedCreditsParams,
  PersonDetails200,
  PersonDetailsParams,
  PersonExternalIds200,
  PersonImages200,
  PersonLatestId200,
  PersonMovieCredits200,
  PersonMovieCreditsParams,
  PersonPopularList200,
  PersonPopularListParams,
  PersonTaggedImages200,
  PersonTaggedImagesParams,
  PersonTvCredits200,
  PersonTvCreditsParams,
  ReviewDetails200,
  SearchCollection200,
  SearchCollectionParams,
  SearchCompany200,
  SearchCompanyParams,
  SearchKeyword200,
  SearchKeywordParams,
  SearchMovie200,
  SearchMovieParams,
  SearchMulti200,
  SearchMultiParams,
  SearchPerson200,
  SearchPersonParams,
  SearchTv200,
  SearchTvParams,
  Translations200,
  TrendingAll200,
  TrendingAllParams,
  TrendingMovies200,
  TrendingMoviesParams,
  TrendingPeople200,
  TrendingPeopleParams,
  TrendingTv200,
  TrendingTvParams,
  TvEpisodeAccountStates200,
  TvEpisodeAccountStatesParams,
  TvEpisodeAddRating200,
  TvEpisodeAddRatingBody,
  TvEpisodeAddRatingParams,
  TvEpisodeChangesById200,
  TvEpisodeCredits200,
  TvEpisodeCreditsParams,
  TvEpisodeDeleteRating200,
  TvEpisodeDeleteRatingParams,
  TvEpisodeDetails200,
  TvEpisodeDetailsParams,
  TvEpisodeExternalIds200,
  TvEpisodeGroupDetails200,
  TvEpisodeImages200,
  TvEpisodeImagesParams,
  TvEpisodeTranslations200,
  TvEpisodeVideos200,
  TvEpisodeVideosParams,
  TvSeasonAccountStates200,
  TvSeasonAccountStatesParams,
  TvSeasonAggregateCredits200,
  TvSeasonAggregateCreditsParams,
  TvSeasonChangesById200,
  TvSeasonChangesByIdParams,
  TvSeasonCredits200,
  TvSeasonCreditsParams,
  TvSeasonDetails200,
  TvSeasonDetailsParams,
  TvSeasonExternalIds200,
  TvSeasonImages200,
  TvSeasonImagesParams,
  TvSeasonTranslations200,
  TvSeasonVideos200,
  TvSeasonVideosParams,
  TvSeasonWatchProviders200,
  TvSeasonWatchProvidersParams,
  TvSeriesAccountStates200,
  TvSeriesAccountStatesParams,
  TvSeriesAddRating200,
  TvSeriesAddRatingBody,
  TvSeriesAddRatingParams,
  TvSeriesAggregateCredits200,
  TvSeriesAggregateCreditsParams,
  TvSeriesAiringTodayList200,
  TvSeriesAiringTodayListParams,
  TvSeriesAlternativeTitles200,
  TvSeriesChanges200,
  TvSeriesChangesParams,
  TvSeriesContentRatings200,
  TvSeriesCredits200,
  TvSeriesCreditsParams,
  TvSeriesDeleteRating200,
  TvSeriesDeleteRatingParams,
  TvSeriesDetails200,
  TvSeriesDetailsParams,
  TvSeriesEpisodeGroups200,
  TvSeriesExternalIds200,
  TvSeriesImages200,
  TvSeriesImagesParams,
  TvSeriesKeywords200,
  TvSeriesLatestId200,
  TvSeriesOnTheAirList200,
  TvSeriesOnTheAirListParams,
  TvSeriesPopularList200,
  TvSeriesPopularListParams,
  TvSeriesRecommendations200,
  TvSeriesRecommendationsParams,
  TvSeriesReviews200,
  TvSeriesReviewsParams,
  TvSeriesScreenedTheatrically200,
  TvSeriesSimilar200,
  TvSeriesSimilarParams,
  TvSeriesTopRatedList200,
  TvSeriesTopRatedListParams,
  TvSeriesTranslations200,
  TvSeriesVideos200,
  TvSeriesVideosParams,
  TvSeriesWatchProviders200,
  WatchProviderTvList200,
  WatchProviderTvListParams,
  WatchProvidersAvailableRegions200,
  WatchProvidersAvailableRegionsParams,
  WatchProvidersMovieList200,
  WatchProvidersMovieListParams,
} from '../../../generated/tmdb/schemas';

import { customInstance } from '../../utils/api/tmdb/mutator';

export const getTmdbApi = () => {
  /**
   * Search for movies by their original, translated and alternative titles.
   * @summary Movie
   */
  const searchMovie = (params: SearchMovieParams) => {
    return customInstance<SearchMovie200>({
      url: `/3/search/movie`,
      method: 'GET',
      params,
    });
  };

  /**
   * Find movies using over 30 filters and sort options.
   * @summary Movie
   */
  const discoverMovie = (params?: DiscoverMovieParams) => {
    return customInstance<DiscoverMovie200>({
      url: `/3/discover/movie`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the top level details of a movie by ID.
   * @summary Details
   */
  const movieDetails = (movieId: number, params?: MovieDetailsParams) => {
    return customInstance<MovieDetails200>({
      url: `/3/movie/${movieId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the details of a TV show.
   * @summary Details
   */
  const tvSeriesDetails = (
    seriesId: number,
    params?: TvSeriesDetailsParams,
  ) => {
    return customInstance<TvSeriesDetails200>({
      url: `/3/tv/${seriesId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Search for TV shows by their original, translated and also known as names.
   * @summary TV
   */
  const searchTv = (params: SearchTvParams) => {
    return customInstance<SearchTv200>({
      url: `/3/search/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Use multi search when you want to search for movies, TV shows and people in a single request.
   * @summary Multi
   */
  const searchMulti = (params: SearchMultiParams) => {
    return customInstance<SearchMulti200>({
      url: `/3/search/multi`,
      method: 'GET',
      params,
    });
  };

  /**
   * Search for people by their name and also known as names.
   * @summary Person
   */
  const searchPerson = (params: SearchPersonParams) => {
    return customInstance<SearchPerson200>({
      url: `/3/search/person`,
      method: 'GET',
      params,
    });
  };

  /**
   * Query the API configuration details.
   * @summary Details
   */
  const configurationDetails = () => {
    return customInstance<ConfigurationDetails200>({
      url: `/3/configuration`,
      method: 'GET',
    });
  };

  /**
   * Query the details of a TV season.
   * @summary Details
   */
  const tvSeasonDetails = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonDetailsParams,
  ) => {
    return customInstance<TvSeasonDetails200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Query the details of a TV episode.
   * @summary Details
   */
  const tvEpisodeDetails = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeDetailsParams,
  ) => {
    return customInstance<TvEpisodeDetails200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Find TV shows using over 30 filters and sort options.
   * @summary TV
   */
  const discoverTv = (params?: DiscoverTvParams) => {
    return customInstance<DiscoverTv200>({
      url: `/3/discover/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the images that belong to a movie.
   * @summary Images
   */
  const movieImages = (movieId: number, params?: MovieImagesParams) => {
    return customInstance<MovieImages200>({
      url: `/3/movie/${movieId}/images`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the images that belong to a TV series.
   * @summary Images
   */
  const tvSeriesImages = (seriesId: number, params?: TvSeriesImagesParams) => {
    return customInstance<TvSeriesImages200>({
      url: `/3/tv/${seriesId}/images`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the images that belong to a TV season.
   * @summary Images
   */
  const tvSeasonImages = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonImagesParams,
  ) => {
    return customInstance<TvSeasonImages200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/images`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the images that belong to a TV episode.
   * @summary Images
   */
  const tvEpisodeImages = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeImagesParams,
  ) => {
    return customInstance<TvEpisodeImages200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/images`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the trending movies, TV shows and people.
   * @summary All
   */
  const trendingAll = (
    params?: TrendingAllParams,
    timeWindow: 'day' | 'week' = 'day',
  ) => {
    return customInstance<TrendingAll200>({
      url: `/3/trending/all/${timeWindow}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the trending movies on TMDB.
   * @summary Movies
   */
  const trendingMovies = (
    params?: TrendingMoviesParams,
    timeWindow: 'day' | 'week' = 'day',
  ) => {
    return customInstance<TrendingMovies200>({
      url: `/3/trending/movie/${timeWindow}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the trending TV shows on TMDB.
   * @summary TV
   */
  const trendingTv = (
    params?: TrendingTvParams,
    timeWindow: 'day' | 'week' = 'day',
  ) => {
    return customInstance<TrendingTv200>({
      url: `/3/trending/tv/${timeWindow}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rating, watchlist and favourite status of an account.
   * @summary Account States
   */
  const movieAccountStates = (
    movieId: number,
    params?: MovieAccountStatesParams,
  ) => {
    return customInstance<MovieAccountStates200>({
      url: `/3/movie/${movieId}/account_states`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rating, watchlist and favourite status.
   * @summary Account States
   */
  const tvSeriesAccountStates = (
    seriesId: number,
    params?: TvSeriesAccountStatesParams,
  ) => {
    return customInstance<TvSeriesAccountStates200>({
      url: `/3/tv/${seriesId}/account_states`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rating, watchlist and favourite status.
   * @summary Account States
   */
  const tvEpisodeAccountStates = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeAccountStatesParams,
  ) => {
    return customInstance<TvEpisodeAccountStates200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/account_states`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the trending people on TMDB.
   * @summary People
   */
  const trendingPeople = (
    params?: TrendingPeopleParams,
    timeWindow: 'day' | 'week' = 'day',
  ) => {
    return customInstance<TrendingPeople200>({
      url: `/3/trending/person/${timeWindow}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the alternative titles for a movie.
   * @summary Alternative Titles
   */
  const movieAlternativeTitles = (
    movieId: number,
    params?: MovieAlternativeTitlesParams,
  ) => {
    return customInstance<MovieAlternativeTitles200>({
      url: `/3/movie/${movieId}/alternative_titles`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the recent changes for a movie.
   * @summary Changes
   */
  const movieChanges = (movieId: number, params?: MovieChangesParams) => {
    return customInstance<MovieChanges200>({
      url: `/3/movie/${movieId}/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Credits
   */
  const movieCredits = (movieId: number, params?: MovieCreditsParams) => {
    return customInstance<MovieCredits200>({
      url: `/3/movie/${movieId}/credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary External IDs
   */
  const movieExternalIds = (movieId: number) => {
    return customInstance<MovieExternalIds200>({
      url: `/3/movie/${movieId}/external_ids`,
      method: 'GET',
    });
  };

  /**
   * @summary Keywords
   */
  const movieKeywords = (movieId: string) => {
    return customInstance<MovieKeywords200>({
      url: `/3/movie/${movieId}/keywords`,
      method: 'GET',
    });
  };

  /**
   * Get the lists that a movie has been added to.
   * @summary Lists
   */
  const movieLists = (movieId: number, params?: MovieListsParams) => {
    return customInstance<MovieLists200>({
      url: `/3/movie/${movieId}/lists`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Recommendations
   */
  const movieRecommendations = (
    movieId: number,
    params?: MovieRecommendationsParams,
  ) => {
    return customInstance<MovieRecommendations200>({
      url: `/3/movie/${movieId}/recommendations`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the release dates and certifications for a movie.
   * @summary Release Dates
   */
  const movieReleaseDates = (movieId: number) => {
    return customInstance<MovieReleaseDates200>({
      url: `/3/movie/${movieId}/release_dates`,
      method: 'GET',
    });
  };

  /**
   * Get the user reviews for a movie.
   * @summary Reviews
   */
  const movieReviews = (movieId: number, params?: MovieReviewsParams) => {
    return customInstance<MovieReviews200>({
      url: `/3/movie/${movieId}/reviews`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the similar movies based on genres and keywords.
   * @summary Similar
   */
  const movieSimilar = (movieId: number, params?: MovieSimilarParams) => {
    return customInstance<MovieSimilar200>({
      url: `/3/movie/${movieId}/similar`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the translations for a movie.
   * @summary Translations
   */
  const movieTranslations = (movieId: number) => {
    return customInstance<MovieTranslations200>({
      url: `/3/movie/${movieId}/translations`,
      method: 'GET',
    });
  };

  /**
   * @summary Videos
   */
  const movieVideos = (movieId: number, params?: MovieVideosParams) => {
    return customInstance<MovieVideos200>({
      url: `/3/movie/${movieId}/videos`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of streaming providers we have for a movie.
   * @summary Watch Providers
   */
  const movieWatchProviders = (movieId: number) => {
    return customInstance<MovieWatchProviders200>({
      url: `/3/movie/${movieId}/watch/providers`,
      method: 'GET',
    });
  };

  /**
   * Rate a movie and save it to your rated list.
   * @summary Add Rating
   */
  const movieAddRating = (
    movieId: number,
    movieAddRatingBody: MovieAddRatingBody,
    params?: MovieAddRatingParams,
  ) => {
    return customInstance<MovieAddRating200>({
      url: `/3/movie/${movieId}/rating`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: movieAddRatingBody,
      params,
    });
  };

  /**
   * Delete a user rating.
   * @summary Delete Rating
   */
  const movieDeleteRating = (
    movieId: number,
    params?: MovieDeleteRatingParams,
  ) => {
    return customInstance<MovieDeleteRating200>({
      url: `/3/movie/${movieId}/rating`,
      method: 'DELETE',
      params,
    });
  };

  /**
   * @summary Create Guest Session
   */
  const authenticationCreateGuestSession = () => {
    return customInstance<AuthenticationCreateGuestSession200>({
      url: `/3/authentication/guest_session/new`,
      method: 'GET',
    });
  };

  /**
   * @summary Create Request Token
   */
  const authenticationCreateRequestToken = () => {
    return customInstance<AuthenticationCreateRequestToken200>({
      url: `/3/authentication/token/new`,
      method: 'GET',
    });
  };

  /**
   * @summary Create Session
   */
  const authenticationCreateSession = (
    authenticationCreateSessionBody: AuthenticationCreateSessionBody,
  ) => {
    return customInstance<AuthenticationCreateSession200>({
      url: `/3/authentication/session/new`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: authenticationCreateSessionBody,
    });
  };

  /**
   * @summary Create Session (from v4 token)
   */
  const authenticationCreateSessionFromV4Token = (
    authenticationCreateSessionFromV4TokenBody: AuthenticationCreateSessionFromV4TokenBody,
  ) => {
    return customInstance<AuthenticationCreateSessionFromV4Token200>({
      url: `/3/authentication/session/convert/4`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: authenticationCreateSessionFromV4TokenBody,
    });
  };

  /**
   * @summary Delete Session
   */
  const authenticationDeleteSession = (
    authenticationDeleteSessionBody: AuthenticationDeleteSessionBody,
  ) => {
    return customInstance<AuthenticationDeleteSession200>({
      url: `/3/authentication/session`,
      method: 'DELETE',
      headers: { 'Content-Type': 'application/json' },
      data: authenticationDeleteSessionBody,
    });
  };

  /**
   * Find data by external ID's.
   * @summary Find By ID
   */
  const findById = (externalId: string, params: FindByIdParams) => {
    return customInstance<FindById200>({
      url: `/3/find/${externalId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Query the top level details of a person.
   * @summary Details
   */
  const personDetails = (personId: number, params?: PersonDetailsParams) => {
    return customInstance<PersonDetails200>({
      url: `/3/person/${personId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the recent changes for a person.
   * @summary Changes
   */
  const personChanges = (personId: number, params?: PersonChangesParams) => {
    return customInstance<PersonChanges200>({
      url: `/3/person/${personId}/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the recent changes for a TV show.
   * @summary Changes
   */
  const tvSeriesChanges = (
    seriesId: number,
    params?: TvSeriesChangesParams,
  ) => {
    return customInstance<TvSeriesChanges200>({
      url: `/3/tv/${seriesId}/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the profile images that belong to a person.
   * @summary Images
   */
  const personImages = (personId: number) => {
    return customInstance<PersonImages200>({
      url: `/3/person/${personId}/images`,
      method: 'GET',
    });
  };

  /**
   * Get the movie credits for a person.
   * @summary Movie Credits
   */
  const personMovieCredits = (
    personId: number,
    params?: PersonMovieCreditsParams,
  ) => {
    return customInstance<PersonMovieCredits200>({
      url: `/3/person/${personId}/movie_credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the TV credits that belong to a person.
   * @summary TV Credits
   */
  const personTvCredits = (
    personId: number,
    params?: PersonTvCreditsParams,
  ) => {
    return customInstance<PersonTvCredits200>({
      url: `/3/person/${personId}/tv_credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the combined movie and TV credits that belong to a person.
   * @summary Combined Credits
   */
  const personCombinedCredits = (
    personId: string,
    params?: PersonCombinedCreditsParams,
  ) => {
    return customInstance<PersonCombinedCredits200>({
      url: `/3/person/${personId}/combined_credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the external ID's that belong to a person.
   * @summary External IDs
   */
  const personExternalIds = (personId: number) => {
    return customInstance<PersonExternalIds200>({
      url: `/3/person/${personId}/external_ids`,
      method: 'GET',
    });
  };

  /**
   * Get the tagged images for a person.
   * @summary Tagged Images
   */
  const personTaggedImages = (
    personId: number,
    params?: PersonTaggedImagesParams,
  ) => {
    return customInstance<PersonTaggedImages200>({
      url: `/3/person/${personId}/tagged_images`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the translations that belong to a person.
   * @summary Translations
   */
  const translations = (personId: number) => {
    return customInstance<Translations200>({
      url: `/3/person/${personId}/translations`,
      method: 'GET',
    });
  };

  /**
   * Get a list of people ordered by popularity.
   * @summary Popular
   */
  const personPopularList = (params?: PersonPopularListParams) => {
    return customInstance<PersonPopularList200>({
      url: `/3/person/popular`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of movies ordered by popularity.
   * @summary Popular
   */
  const moviePopularList = (params?: MoviePopularListParams) => {
    return customInstance<MoviePopularList200>({
      url: `/3/movie/popular`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of movies ordered by rating.
   * @summary Top Rated
   */
  const movieTopRatedList = (params?: MovieTopRatedListParams) => {
    return customInstance<MovieTopRatedList200>({
      url: `/3/movie/top_rated`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of movies that are being released soon.
   * @summary Upcoming
   */
  const movieUpcomingList = (params?: MovieUpcomingListParams) => {
    return customInstance<MovieUpcomingList200>({
      url: `/3/movie/upcoming`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of movies that are currently in theatres.
   * @summary Now Playing
   */
  const movieNowPlayingList = (params?: MovieNowPlayingListParams) => {
    return customInstance<MovieNowPlayingList200>({
      url: `/3/movie/now_playing`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of TV shows airing today.
   * @summary Airing Today
   */
  const tvSeriesAiringTodayList = (params?: TvSeriesAiringTodayListParams) => {
    return customInstance<TvSeriesAiringTodayList200>({
      url: `/3/tv/airing_today`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of TV shows that air in the next 7 days.
   * @summary On The Air
   */
  const tvSeriesOnTheAirList = (params?: TvSeriesOnTheAirListParams) => {
    return customInstance<TvSeriesOnTheAirList200>({
      url: `/3/tv/on_the_air`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of TV shows ordered by popularity.
   * @summary Popular
   */
  const tvSeriesPopularList = (params?: TvSeriesPopularListParams) => {
    return customInstance<TvSeriesPopularList200>({
      url: `/3/tv/popular`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of TV shows ordered by rating.
   * @summary Top Rated
   */
  const tvSeriesTopRatedList = (params?: TvSeriesTopRatedListParams) => {
    return customInstance<TvSeriesTopRatedList200>({
      url: `/3/tv/top_rated`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the newest movie ID.
   * @summary Latest
   */
  const movieLatestId = () => {
    return customInstance<MovieLatestId200>({
      url: `/3/movie/latest`,
      method: 'GET',
    });
  };

  /**
   * Get the newest TV show ID.
   * @summary Latest
   */
  const tvSeriesLatestId = () => {
    return customInstance<TvSeriesLatestId200>({
      url: `/3/tv/latest`,
      method: 'GET',
    });
  };

  /**
   * Get the aggregate credits (cast and crew) that have been added to a TV show.
   * @summary Aggregate Credits
   */
  const tvSeriesAggregateCredits = (
    seriesId: number,
    params?: TvSeriesAggregateCreditsParams,
  ) => {
    return customInstance<TvSeriesAggregateCredits200>({
      url: `/3/tv/${seriesId}/aggregate_credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the alternative titles that have been added to a TV show.
   * @summary Alternative Titles
   */
  const tvSeriesAlternativeTitles = (seriesId: number) => {
    return customInstance<TvSeriesAlternativeTitles200>({
      url: `/3/tv/${seriesId}/alternative_titles`,
      method: 'GET',
    });
  };

  /**
   * Get the content ratings that have been added to a TV show.
   * @summary Content Ratings
   */
  const tvSeriesContentRatings = (seriesId: number) => {
    return customInstance<TvSeriesContentRatings200>({
      url: `/3/tv/${seriesId}/content_ratings`,
      method: 'GET',
    });
  };

  /**
   * Get the latest season credits of a TV show.
   * @summary Credits
   */
  const tvSeriesCredits = (
    seriesId: number,
    params?: TvSeriesCreditsParams,
  ) => {
    return customInstance<TvSeriesCredits200>({
      url: `/3/tv/${seriesId}/credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the episode groups that have been added to a TV show.
   * @summary Episode Groups
   */
  const tvSeriesEpisodeGroups = (seriesId: number) => {
    return customInstance<TvSeriesEpisodeGroups200>({
      url: `/3/tv/${seriesId}/episode_groups`,
      method: 'GET',
    });
  };

  /**
   * Get a list of external IDs that have been added to a TV show.
   * @summary External IDs
   */
  const tvSeriesExternalIds = (seriesId: number) => {
    return customInstance<TvSeriesExternalIds200>({
      url: `/3/tv/${seriesId}/external_ids`,
      method: 'GET',
    });
  };

  /**
   * Get a list of keywords that have been added to a TV show.
   * @summary Keywords
   */
  const tvSeriesKeywords = (seriesId: number) => {
    return customInstance<TvSeriesKeywords200>({
      url: `/3/tv/${seriesId}/keywords`,
      method: 'GET',
    });
  };

  /**
   * @summary Recommendations
   */
  const tvSeriesRecommendations = (
    seriesId: number,
    params?: TvSeriesRecommendationsParams,
  ) => {
    return customInstance<TvSeriesRecommendations200>({
      url: `/3/tv/${seriesId}/recommendations`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the reviews that have been added to a TV show.
   * @summary Reviews
   */
  const tvSeriesReviews = (
    seriesId: number,
    params?: TvSeriesReviewsParams,
  ) => {
    return customInstance<TvSeriesReviews200>({
      url: `/3/tv/${seriesId}/reviews`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the seasons and episodes that have screened theatrically.
   * @summary Screened Theatrically
   */
  const tvSeriesScreenedTheatrically = (seriesId: number) => {
    return customInstance<TvSeriesScreenedTheatrically200>({
      url: `/3/tv/${seriesId}/screened_theatrically`,
      method: 'GET',
    });
  };

  /**
   * Get the similar TV shows.
   * @summary Similar
   */
  const tvSeriesSimilar = (
    seriesId: string,
    params?: TvSeriesSimilarParams,
  ) => {
    return customInstance<TvSeriesSimilar200>({
      url: `/3/tv/${seriesId}/similar`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the translations that have been added to a TV show.
   * @summary Translations
   */
  const tvSeriesTranslations = (seriesId: number) => {
    return customInstance<TvSeriesTranslations200>({
      url: `/3/tv/${seriesId}/translations`,
      method: 'GET',
    });
  };

  /**
   * Get the videos that belong to a TV show.
   * @summary Videos
   */
  const tvSeriesVideos = (seriesId: number, params?: TvSeriesVideosParams) => {
    return customInstance<TvSeriesVideos200>({
      url: `/3/tv/${seriesId}/videos`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of streaming providers we have for a TV show.
   * @summary Watch Providers
   */
  const tvSeriesWatchProviders = (seriesId: number) => {
    return customInstance<TvSeriesWatchProviders200>({
      url: `/3/tv/${seriesId}/watch/providers`,
      method: 'GET',
    });
  };

  /**
   * Rate a TV show and save it to your rated list.
   * @summary Add Rating
   */
  const tvSeriesAddRating = (
    seriesId: number,
    tvSeriesAddRatingBody: TvSeriesAddRatingBody,
    params?: TvSeriesAddRatingParams,
  ) => {
    return customInstance<TvSeriesAddRating200>({
      url: `/3/tv/${seriesId}/rating`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: tvSeriesAddRatingBody,
      params,
    });
  };

  /**
   * @summary Delete Rating
   */
  const tvSeriesDeleteRating = (
    seriesId: number,
    params?: TvSeriesDeleteRatingParams,
  ) => {
    return customInstance<TvSeriesDeleteRating200>({
      url: `/3/tv/${seriesId}/rating`,
      method: 'DELETE',
      params,
    });
  };

  /**
   * Get the rating, watchlist and favourite status.
   * @summary Account States
   */
  const tvSeasonAccountStates = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonAccountStatesParams,
  ) => {
    return customInstance<TvSeasonAccountStates200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/account_states`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the aggregate credits (cast and crew) that have been added to a TV season.
   * @summary Aggregate Credits
   */
  const tvSeasonAggregateCredits = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonAggregateCreditsParams,
  ) => {
    return customInstance<TvSeasonAggregateCredits200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/aggregate_credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the recent changes for a TV season.
   * @summary Changes
   */
  const tvSeasonChangesById = (
    seasonId: number,
    params?: TvSeasonChangesByIdParams,
  ) => {
    return customInstance<TvSeasonChangesById200>({
      url: `/3/tv/season/${seasonId}/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Credits
   */
  const tvSeasonCredits = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonCreditsParams,
  ) => {
    return customInstance<TvSeasonCredits200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of external IDs that have been added to a TV season.
   * @summary External IDs
   */
  const tvSeasonExternalIds = (seriesId: number, seasonNumber: number) => {
    return customInstance<TvSeasonExternalIds200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/external_ids`,
      method: 'GET',
    });
  };

  /**
   * Get the translations for a TV season.
   * @summary Translations
   */
  const tvSeasonTranslations = (seriesId: number, seasonNumber: number) => {
    return customInstance<TvSeasonTranslations200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/translations`,
      method: 'GET',
    });
  };

  /**
   * Get the videos that belong to a TV season.
   * @summary Videos
   */
  const tvSeasonVideos = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonVideosParams,
  ) => {
    return customInstance<TvSeasonVideos200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/videos`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Credits
   */
  const tvEpisodeCredits = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeCreditsParams,
  ) => {
    return customInstance<TvEpisodeCredits200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/credits`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of external IDs that have been added to a TV episode.
   * @summary External IDs
   */
  const tvEpisodeExternalIds = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: string,
  ) => {
    return customInstance<TvEpisodeExternalIds200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/external_ids`,
      method: 'GET',
    });
  };

  /**
   * Get the translations that have been added to a TV episode.
   * @summary Translations
   */
  const tvEpisodeTranslations = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
  ) => {
    return customInstance<TvEpisodeTranslations200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/translations`,
      method: 'GET',
    });
  };

  /**
   * Get the videos that belong to a TV episode.
   * @summary Videos
   */
  const tvEpisodeVideos = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeVideosParams,
  ) => {
    return customInstance<TvEpisodeVideos200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/videos`,
      method: 'GET',
      params,
    });
  };

  /**
   * Rate a TV episode and save it to your rated list.
   * @summary Add Rating
   */
  const tvEpisodeAddRating = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    tvEpisodeAddRatingBody: TvEpisodeAddRatingBody,
    params?: TvEpisodeAddRatingParams,
  ) => {
    return customInstance<TvEpisodeAddRating200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/rating`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: tvEpisodeAddRatingBody,
      params,
    });
  };

  /**
   * Delete your rating on a TV episode.
   * @summary Delete Rating
   */
  const tvEpisodeDeleteRating = (
    seriesId: number,
    seasonNumber: number,
    episodeNumber: number,
    params?: TvEpisodeDeleteRatingParams,
  ) => {
    return customInstance<TvEpisodeDeleteRating200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/episode/${episodeNumber}/rating`,
      method: 'DELETE',
      params,
    });
  };

  /**
   * Get the public details of an account on TMDB.
   * @summary Details
   */
  const accountDetails = (accountId: number, params?: AccountDetailsParams) => {
    return customInstance<AccountDetails200>({
      url: `/3/account/${accountId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of custom lists.
   * @summary Lists
   */
  const accountLists = (accountId: number, params?: AccountListsParams) => {
    return customInstance<AccountLists200>({
      url: `/3/account/${accountId}/lists`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of favourite movies.
   * @summary Favorite Movies
   */
  const accountGetFavorites = (
    accountId: number,
    params?: AccountGetFavoritesParams,
  ) => {
    return customInstance<AccountGetFavorites200>({
      url: `/3/account/${accountId}/favorite/movies`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of favourite TV shows.
   * @summary Favorite TV
   */
  const accountFavoriteTv = (
    accountId: number,
    params?: AccountFavoriteTvParams,
  ) => {
    return customInstance<AccountFavoriteTv200>({
      url: `/3/account/${accountId}/favorite/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of rated movies.
   * @summary Rated Movies
   */
  const accountRatedMovies = (
    accountId: number,
    params?: AccountRatedMoviesParams,
  ) => {
    return customInstance<AccountRatedMovies200>({
      url: `/3/account/${accountId}/rated/movies`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of rated TV shows.
   * @summary Rated TV
   */
  const accountRatedTv = (accountId: number, params?: AccountRatedTvParams) => {
    return customInstance<AccountRatedTv200>({
      url: `/3/account/${accountId}/rated/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a users list of rated TV episodes.
   * @summary Rated TV Episodes
   */
  const accountRatedTvEpisodes = (
    accountId: number,
    params?: AccountRatedTvEpisodesParams,
  ) => {
    return customInstance<AccountRatedTvEpisodes200>({
      url: `/3/account/${accountId}/rated/tv/episodes`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of movies added to a users watchlist.
   * @summary Watchlist Movies
   */
  const accountWatchlistMovies = (
    accountId: number,
    params?: AccountWatchlistMoviesParams,
  ) => {
    return customInstance<AccountWatchlistMovies200>({
      url: `/3/account/${accountId}/watchlist/movies`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get a list of TV shows added to a users watchlist.
   * @summary Watchlist TV
   */
  const accountWatchlistTv = (
    accountId: number,
    params?: AccountWatchlistTvParams,
  ) => {
    return customInstance<AccountWatchlistTv200>({
      url: `/3/account/${accountId}/watchlist/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Mark a movie or TV show as a favourite.
   * @summary Add Favorite
   */
  const accountAddFavorite = (
    accountId: number,
    accountAddFavoriteBody: AccountAddFavoriteBody,
    params?: AccountAddFavoriteParams,
  ) => {
    return customInstance<AccountAddFavorite200>({
      url: `/3/account/${accountId}/favorite`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: accountAddFavoriteBody,
      params,
    });
  };

  /**
   * Add a movie or TV show to your watchlist.
   * @summary Add To Watchlist
   */
  const accountAddToWatchlist = (
    accountId: number,
    accountAddToWatchlistBody: AccountAddToWatchlistBody,
    params?: AccountAddToWatchlistParams,
  ) => {
    return customInstance<AccountAddToWatchlist200>({
      url: `/3/account/${accountId}/watchlist`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: accountAddToWatchlistBody,
      params,
    });
  };

  /**
   * Get an up to date list of the officially supported movie certifications on TMDB.
   * @summary Movie Certifications
   */
  const certificationMovieList = () => {
    return customInstance<CertificationMovieList200>({
      url: `/3/certification/movie/list`,
      method: 'GET',
    });
  };

  /**
   * @summary TV Certifications
   */
  const certificationsTvList = () => {
    return customInstance<CertificationsTvList200>({
      url: `/3/certification/tv/list`,
      method: 'GET',
    });
  };

  /**
   * Get a list of all of the movie ids that have been changed in the past 24 hours.
   * @summary Movie List
   */
  const changesMovieList = (params?: ChangesMovieListParams) => {
    return customInstance<ChangesMovieList200>({
      url: `/3/movie/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary TV List
   */
  const changesTvList = (params?: ChangesTvListParams) => {
    return customInstance<ChangesTvList200>({
      url: `/3/tv/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary People List
   */
  const changesPeopleList = (params?: ChangesPeopleListParams) => {
    return customInstance<ChangesPeopleList200>({
      url: `/3/person/changes`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get collection details by ID.
   * @summary Details
   */
  const collectionDetails = (
    collectionId: number,
    params?: CollectionDetailsParams,
  ) => {
    return customInstance<CollectionDetails200>({
      url: `/3/collection/${collectionId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the images that belong to a collection.
   * @summary Images
   */
  const collectionImages = (
    collectionId: number,
    params?: CollectionImagesParams,
  ) => {
    return customInstance<CollectionImages200>({
      url: `/3/collection/${collectionId}/images`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Translations
   */
  const collectionTranslations = (collectionId: number) => {
    return customInstance<CollectionTranslations200>({
      url: `/3/collection/${collectionId}/translations`,
      method: 'GET',
    });
  };

  /**
   * Get the company details by ID.
   * @summary Details
   */
  const companyDetails = (companyId: number) => {
    return customInstance<CompanyDetails200>({
      url: `/3/company/${companyId}`,
      method: 'GET',
    });
  };

  /**
   * Get the company details by ID.
   * @summary Alternative Names
   */
  const companyAlternativeNames = (companyId: number) => {
    return customInstance<CompanyAlternativeNames200>({
      url: `/3/company/${companyId}/alternative_names`,
      method: 'GET',
    });
  };

  /**
   * Get the company logos by id.
   * @summary Images
   */
  const companyImages = (companyId: number) => {
    return customInstance<CompanyImages200>({
      url: `/3/company/${companyId}/images`,
      method: 'GET',
    });
  };

  /**
   * Get a movie or TV credit details by ID.
   * @summary Details
   */
  const creditDetails = (creditId: string) => {
    return customInstance<CreditDetails200>({
      url: `/3/credit/${creditId}`,
      method: 'GET',
    });
  };

  /**
   * Get the list of official genres for movies.
   * @summary Movie List
   */
  const genreMovieList = (params?: GenreMovieListParams) => {
    return customInstance<GenreMovieList200>({
      url: `/3/genre/movie/list`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of official genres for TV shows.
   * @summary TV List
   */
  const genreTvList = (params?: GenreTvListParams) => {
    return customInstance<GenreTvList200>({
      url: `/3/genre/tv/list`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rated movies for a guest session.
   * @summary Rated Movies
   */
  const guestSessionRatedMovies = (
    guestSessionId: string,
    params?: GuestSessionRatedMoviesParams,
  ) => {
    return customInstance<GuestSessionRatedMovies200>({
      url: `/3/guest_session/${guestSessionId}/rated/movies`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rated TV shows for a guest session.
   * @summary Rated TV
   */
  const guestSessionRatedTv = (
    guestSessionId: string,
    params?: GuestSessionRatedTvParams,
  ) => {
    return customInstance<GuestSessionRatedTv200>({
      url: `/3/guest_session/${guestSessionId}/rated/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the rated TV episodes for a guest session.
   * @summary Rated TV Episodes
   */
  const guestSessionRatedTvEpisodes = (
    guestSessionId: string,
    params?: GuestSessionRatedTvEpisodesParams,
  ) => {
    return customInstance<GuestSessionRatedTvEpisodes200>({
      url: `/3/guest_session/${guestSessionId}/rated/tv/episodes`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of the countries we have watch provider (OTT/streaming) data for.
   * @summary Available Regions
   */
  const watchProvidersAvailableRegions = (
    params?: WatchProvidersAvailableRegionsParams,
  ) => {
    return customInstance<WatchProvidersAvailableRegions200>({
      url: `/3/watch/providers/regions`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of streaming providers we have for movies.
   * @summary Movie Providers
   */
  const watchProvidersMovieList = (params?: WatchProvidersMovieListParams) => {
    return customInstance<WatchProvidersMovieList200>({
      url: `/3/watch/providers/movie`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of streaming providers we have for TV shows.
   * @summary TV Providers
   */
  const watchProviderTvList = (params?: WatchProviderTvListParams) => {
    return customInstance<WatchProviderTvList200>({
      url: `/3/watch/providers/tv`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Details
   */
  const keywordDetails = (keywordId: number) => {
    return customInstance<KeywordDetails200>({
      url: `/3/keyword/${keywordId}`,
      method: 'GET',
    });
  };

  /**
   * @summary Movies
   */
  const keywordMovies = (keywordId: string, params?: KeywordMoviesParams) => {
    return customInstance<KeywordMovies200>({
      url: `/3/keyword/${keywordId}/movies`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Details
   */
  const listDetails = (listId: number, params?: ListDetailsParams) => {
    return customInstance<ListDetails200>({
      url: `/3/list/${listId}`,
      method: 'GET',
      params,
    });
  };

  /**
   * Delete a list.
   * @summary Delete
   */
  const listDelete = (listId: number, params: ListDeleteParams) => {
    return customInstance<ListDelete200>({
      url: `/3/list/${listId}`,
      method: 'DELETE',
      params,
    });
  };

  /**
   * Use this method to check if an item has already been added to the list.
   * @summary Check Item Status
   */
  const listCheckItemStatus = (
    listId: number,
    params?: ListCheckItemStatusParams,
  ) => {
    return customInstance<ListCheckItemStatus200>({
      url: `/3/list/${listId}/item_status`,
      method: 'GET',
      params,
    });
  };

  /**
   * @summary Create
   */
  const listCreate = (
    listCreateBody: ListCreateBody,
    params: ListCreateParams,
  ) => {
    return customInstance<ListCreate200>({
      url: `/3/list`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: listCreateBody,
      params,
    });
  };

  /**
   * Add a movie to a list.
   * @summary Add Movie
   */
  const listAddMovie = (
    listId: number,
    listAddMovieBody: ListAddMovieBody,
    params: ListAddMovieParams,
  ) => {
    return customInstance<ListAddMovie200>({
      url: `/3/list/${listId}/add_item`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: listAddMovieBody,
      params,
    });
  };

  /**
   * Remove a movie from a list.
   * @summary Remove Movie
   */
  const listRemoveMovie = (
    listId: number,
    listRemoveMovieBody: ListRemoveMovieBody,
    params: ListRemoveMovieParams,
  ) => {
    return customInstance<ListRemoveMovie200>({
      url: `/3/list/${listId}/remove_item`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: listRemoveMovieBody,
      params,
    });
  };

  /**
   * Clear all items from a list.
   * @summary Clear
   */
  const listClear = (listId: number, params: ListClearParams) => {
    return customInstance<ListClear200>({
      url: `/3/list/${listId}/clear`,
      method: 'POST',
      params,
    });
  };

  /**
   * @summary Details
   */
  const networkDetails = (networkId: number) => {
    return customInstance<NetworkDetails200>({
      url: `/3/network/${networkId}`,
      method: 'GET',
    });
  };

  /**
   * Get the alternative names of a network.
   * @summary Alternative Names
   */
  const detailsCopy = (networkId: number) => {
    return customInstance<DetailsCopy200>({
      url: `/3/network/${networkId}/alternative_names`,
      method: 'GET',
    });
  };

  /**
   * Get the TV network logos by id.
   * @summary Images
   */
  const alternativeNamesCopy = (networkId: number) => {
    return customInstance<AlternativeNamesCopy200>({
      url: `/3/network/${networkId}/images`,
      method: 'GET',
    });
  };

  /**
   * Retrieve the details of a movie or TV show review.
   * @summary Details
   */
  const reviewDetails = (reviewId: string) => {
    return customInstance<ReviewDetails200>({
      url: `/3/review/${reviewId}`,
      method: 'GET',
    });
  };

  /**
   * Test your API Key to see if it's valid.
   * @summary Validate Key
   */
  const authenticationValidateKey = () => {
    return customInstance<AuthenticationValidateKey200>({
      url: `/3/authentication`,
      method: 'GET',
    });
  };

  /**
   * Get the list of streaming providers we have for a TV season.
   * @summary Watch Providers
   */
  const tvSeasonWatchProviders = (
    seriesId: number,
    seasonNumber: number,
    params?: TvSeasonWatchProvidersParams,
  ) => {
    return customInstance<TvSeasonWatchProviders200>({
      url: `/3/tv/${seriesId}/season/${seasonNumber}/watch/providers`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
   * @summary Countries
   */
  const configurationCountries = (params?: ConfigurationCountriesParams) => {
    return customInstance<ConfigurationCountries200Item[]>({
      url: `/3/configuration/countries`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the list of the jobs and departments we use on TMDB.
   * @summary Jobs
   */
  const configurationJobs = () => {
    return customInstance<ConfigurationJobs200Item[]>({
      url: `/3/configuration/jobs`,
      method: 'GET',
    });
  };

  /**
   * Get the list of languages (ISO 639-1 tags) used throughout TMDB.
   * @summary Languages
   */
  const configurationLanguages = () => {
    return customInstance<ConfigurationLanguages200Item[]>({
      url: `/3/configuration/languages`,
      method: 'GET',
    });
  };

  /**
   * Get a list of the officially supported translations on TMDB.
   * @summary Primary Translations
   */
  const configurationPrimaryTranslations = () => {
    return customInstance<string[]>({
      url: `/3/configuration/primary_translations`,
      method: 'GET',
    });
  };

  /**
   * Get the list of timezones used throughout TMDB.
   * @summary Timezones
   */
  const configurationTimezones = () => {
    return customInstance<ConfigurationTimezones200Item[]>({
      url: `/3/configuration/timezones`,
      method: 'GET',
    });
  };

  /**
   * This method allows an application to validate a request token by entering a username and password.
   * @summary Create Session (with login)
   */
  const authenticationCreateSessionFromLogin = (
    authenticationCreateSessionFromLoginBody: AuthenticationCreateSessionFromLoginBody,
  ) => {
    return customInstance<AuthenticationCreateSessionFromLogin200>({
      url: `/3/authentication/token/validate_with_login`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: authenticationCreateSessionFromLoginBody,
    });
  };

  /**
   * Get the newest created person. This is a live response and will continuously change.
   * @summary Latest
   */
  const personLatestId = () => {
    return customInstance<PersonLatestId200>({
      url: `/3/person/latest`,
      method: 'GET',
    });
  };

  /**
   * Get the recent changes for a TV episode.
   * @summary Changes
   */
  const tvEpisodeChangesById = (episodeId: number) => {
    return customInstance<TvEpisodeChangesById200>({
      url: `/3/tv/episode/${episodeId}/changes`,
      method: 'GET',
    });
  };

  /**
   * Get the details of a TV episode group.
   * @summary Details
   */
  const tvEpisodeGroupDetails = (tvEpisodeGroupId: string) => {
    return customInstance<TvEpisodeGroupDetails200>({
      url: `/3/tv/episode_group/${tvEpisodeGroupId}`,
      method: 'GET',
    });
  };

  /**
   * Search for companies by their original and alternative names.
   * @summary Company
   */
  const searchCompany = (params: SearchCompanyParams) => {
    return customInstance<SearchCompany200>({
      url: `/3/search/company`,
      method: 'GET',
      params,
    });
  };

  /**
   * Search for collections by their original, translated and alternative names.
   * @summary Collection
   */
  const searchCollection = (params: SearchCollectionParams) => {
    return customInstance<SearchCollection200>({
      url: `/3/search/collection`,
      method: 'GET',
      params,
    });
  };

  /**
   * Search for keywords by their name.
   * @summary Keyword
   */
  const searchKeyword = (params: SearchKeywordParams) => {
    return customInstance<SearchKeyword200>({
      url: `/3/search/keyword`,
      method: 'GET',
      params,
    });
  };

  /**
   * Get the lists that a TV series has been added to.
   * @summary Lists
   */
  const listsCopy = (seriesId: number, params?: ListsCopyParams) => {
    return customInstance<ListsCopy200>({
      url: `/3/tv/${seriesId}/lists`,
      method: 'GET',
      params,
    });
  };

  return {
    searchMovie,
    discoverMovie,
    movieDetails,
    tvSeriesDetails,
    searchTv,
    searchMulti,
    searchPerson,
    configurationDetails,
    tvSeasonDetails,
    tvEpisodeDetails,
    discoverTv,
    movieImages,
    tvSeriesImages,
    tvSeasonImages,
    tvEpisodeImages,
    trendingAll,
    trendingMovies,
    trendingTv,
    movieAccountStates,
    tvSeriesAccountStates,
    tvEpisodeAccountStates,
    trendingPeople,
    movieAlternativeTitles,
    movieChanges,
    movieCredits,
    movieExternalIds,
    movieKeywords,
    movieLists,
    movieRecommendations,
    movieReleaseDates,
    movieReviews,
    movieSimilar,
    movieTranslations,
    movieVideos,
    movieWatchProviders,
    movieAddRating,
    movieDeleteRating,
    authenticationCreateGuestSession,
    authenticationCreateRequestToken,
    authenticationCreateSession,
    authenticationCreateSessionFromV4Token,
    authenticationDeleteSession,
    findById,
    personDetails,
    personChanges,
    tvSeriesChanges,
    personImages,
    personMovieCredits,
    personTvCredits,
    personCombinedCredits,
    personExternalIds,
    personTaggedImages,
    translations,
    personPopularList,
    moviePopularList,
    movieTopRatedList,
    movieUpcomingList,
    movieNowPlayingList,
    tvSeriesAiringTodayList,
    tvSeriesOnTheAirList,
    tvSeriesPopularList,
    tvSeriesTopRatedList,
    movieLatestId,
    tvSeriesLatestId,
    tvSeriesAggregateCredits,
    tvSeriesAlternativeTitles,
    tvSeriesContentRatings,
    tvSeriesCredits,
    tvSeriesEpisodeGroups,
    tvSeriesExternalIds,
    tvSeriesKeywords,
    tvSeriesRecommendations,
    tvSeriesReviews,
    tvSeriesScreenedTheatrically,
    tvSeriesSimilar,
    tvSeriesTranslations,
    tvSeriesVideos,
    tvSeriesWatchProviders,
    tvSeriesAddRating,
    tvSeriesDeleteRating,
    tvSeasonAccountStates,
    tvSeasonAggregateCredits,
    tvSeasonChangesById,
    tvSeasonCredits,
    tvSeasonExternalIds,
    tvSeasonTranslations,
    tvSeasonVideos,
    tvEpisodeCredits,
    tvEpisodeExternalIds,
    tvEpisodeTranslations,
    tvEpisodeVideos,
    tvEpisodeAddRating,
    tvEpisodeDeleteRating,
    accountDetails,
    accountLists,
    accountGetFavorites,
    accountFavoriteTv,
    accountRatedMovies,
    accountRatedTv,
    accountRatedTvEpisodes,
    accountWatchlistMovies,
    accountWatchlistTv,
    accountAddFavorite,
    accountAddToWatchlist,
    certificationMovieList,
    certificationsTvList,
    changesMovieList,
    changesTvList,
    changesPeopleList,
    collectionDetails,
    collectionImages,
    collectionTranslations,
    companyDetails,
    companyAlternativeNames,
    companyImages,
    creditDetails,
    genreMovieList,
    genreTvList,
    guestSessionRatedMovies,
    guestSessionRatedTv,
    guestSessionRatedTvEpisodes,
    watchProvidersAvailableRegions,
    watchProvidersMovieList,
    watchProviderTvList,
    keywordDetails,
    keywordMovies,
    listDetails,
    listDelete,
    listCheckItemStatus,
    listCreate,
    listAddMovie,
    listRemoveMovie,
    listClear,
    networkDetails,
    detailsCopy,
    alternativeNamesCopy,
    reviewDetails,
    authenticationValidateKey,
    tvSeasonWatchProviders,
    configurationCountries,
    configurationJobs,
    configurationLanguages,
    configurationPrimaryTranslations,
    configurationTimezones,
    authenticationCreateSessionFromLogin,
    personLatestId,
    tvEpisodeChangesById,
    tvEpisodeGroupDetails,
    searchCompany,
    searchCollection,
    searchKeyword,
    listsCopy,
  };
};
export type SearchMovieResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchMovie']>>
>;
export type DiscoverMovieResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['discoverMovie']>>
>;
export type MovieDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieDetails']>>
>;
export type TvSeriesDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesDetails']>>
>;
export type SearchTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchTv']>>
>;
export type SearchMultiResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchMulti']>>
>;
export type SearchPersonResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchPerson']>>
>;
export type ConfigurationDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['configurationDetails']>>
>;
export type TvSeasonDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonDetails']>>
>;
export type TvEpisodeDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeDetails']>>
>;
export type DiscoverTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['discoverTv']>>
>;
export type MovieImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieImages']>>
>;
export type TvSeriesImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesImages']>>
>;
export type TvSeasonImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonImages']>>
>;
export type TvEpisodeImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeImages']>>
>;
export type TrendingAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['trendingAll']>>
>;
export type TrendingMoviesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['trendingMovies']>>
>;
export type TrendingTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['trendingTv']>>
>;
export type MovieAccountStatesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieAccountStates']>>
>;
export type TvSeriesAccountStatesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesAccountStates']>>
>;
export type TvEpisodeAccountStatesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeAccountStates']>>
>;
export type TrendingPeopleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['trendingPeople']>>
>;
export type MovieAlternativeTitlesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieAlternativeTitles']>>
>;
export type MovieChangesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieChanges']>>
>;
export type MovieCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieCredits']>>
>;
export type MovieExternalIdsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieExternalIds']>>
>;
export type MovieKeywordsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieKeywords']>>
>;
export type MovieListsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieLists']>>
>;
export type MovieRecommendationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieRecommendations']>>
>;
export type MovieReleaseDatesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieReleaseDates']>>
>;
export type MovieReviewsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieReviews']>>
>;
export type MovieSimilarResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieSimilar']>>
>;
export type MovieTranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieTranslations']>>
>;
export type MovieVideosResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieVideos']>>
>;
export type MovieWatchProvidersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieWatchProviders']>>
>;
export type MovieAddRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieAddRating']>>
>;
export type MovieDeleteRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieDeleteRating']>>
>;
export type AuthenticationCreateGuestSessionResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTmdbApi>['authenticationCreateGuestSession']
    >
  >
>;
export type AuthenticationCreateRequestTokenResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTmdbApi>['authenticationCreateRequestToken']
    >
  >
>;
export type AuthenticationCreateSessionResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['authenticationCreateSession']>
  >
>;
export type AuthenticationCreateSessionFromV4TokenResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTmdbApi>['authenticationCreateSessionFromV4Token']
    >
  >
>;
export type AuthenticationDeleteSessionResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['authenticationDeleteSession']>
  >
>;
export type FindByIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['findById']>>
>;
export type PersonDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personDetails']>>
>;
export type PersonChangesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personChanges']>>
>;
export type TvSeriesChangesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesChanges']>>
>;
export type PersonImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personImages']>>
>;
export type PersonMovieCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personMovieCredits']>>
>;
export type PersonTvCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personTvCredits']>>
>;
export type PersonCombinedCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personCombinedCredits']>>
>;
export type PersonExternalIdsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personExternalIds']>>
>;
export type PersonTaggedImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personTaggedImages']>>
>;
export type TranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['translations']>>
>;
export type PersonPopularListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personPopularList']>>
>;
export type MoviePopularListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['moviePopularList']>>
>;
export type MovieTopRatedListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieTopRatedList']>>
>;
export type MovieUpcomingListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieUpcomingList']>>
>;
export type MovieNowPlayingListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieNowPlayingList']>>
>;
export type TvSeriesAiringTodayListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesAiringTodayList']>>
>;
export type TvSeriesOnTheAirListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesOnTheAirList']>>
>;
export type TvSeriesPopularListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesPopularList']>>
>;
export type TvSeriesTopRatedListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesTopRatedList']>>
>;
export type MovieLatestIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['movieLatestId']>>
>;
export type TvSeriesLatestIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesLatestId']>>
>;
export type TvSeriesAggregateCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesAggregateCredits']>>
>;
export type TvSeriesAlternativeTitlesResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesAlternativeTitles']>
  >
>;
export type TvSeriesContentRatingsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesContentRatings']>>
>;
export type TvSeriesCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesCredits']>>
>;
export type TvSeriesEpisodeGroupsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesEpisodeGroups']>>
>;
export type TvSeriesExternalIdsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesExternalIds']>>
>;
export type TvSeriesKeywordsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesKeywords']>>
>;
export type TvSeriesRecommendationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesRecommendations']>>
>;
export type TvSeriesReviewsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesReviews']>>
>;
export type TvSeriesScreenedTheatricallyResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesScreenedTheatrically']>
  >
>;
export type TvSeriesSimilarResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesSimilar']>>
>;
export type TvSeriesTranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesTranslations']>>
>;
export type TvSeriesVideosResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesVideos']>>
>;
export type TvSeriesWatchProvidersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesWatchProviders']>>
>;
export type TvSeriesAddRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesAddRating']>>
>;
export type TvSeriesDeleteRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeriesDeleteRating']>>
>;
export type TvSeasonAccountStatesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonAccountStates']>>
>;
export type TvSeasonAggregateCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonAggregateCredits']>>
>;
export type TvSeasonChangesByIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonChangesById']>>
>;
export type TvSeasonCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonCredits']>>
>;
export type TvSeasonExternalIdsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonExternalIds']>>
>;
export type TvSeasonTranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonTranslations']>>
>;
export type TvSeasonVideosResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonVideos']>>
>;
export type TvEpisodeCreditsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeCredits']>>
>;
export type TvEpisodeExternalIdsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeExternalIds']>>
>;
export type TvEpisodeTranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeTranslations']>>
>;
export type TvEpisodeVideosResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeVideos']>>
>;
export type TvEpisodeAddRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeAddRating']>>
>;
export type TvEpisodeDeleteRatingResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeDeleteRating']>>
>;
export type AccountDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountDetails']>>
>;
export type AccountListsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountLists']>>
>;
export type AccountGetFavoritesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountGetFavorites']>>
>;
export type AccountFavoriteTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountFavoriteTv']>>
>;
export type AccountRatedMoviesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountRatedMovies']>>
>;
export type AccountRatedTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountRatedTv']>>
>;
export type AccountRatedTvEpisodesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountRatedTvEpisodes']>>
>;
export type AccountWatchlistMoviesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountWatchlistMovies']>>
>;
export type AccountWatchlistTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountWatchlistTv']>>
>;
export type AccountAddFavoriteResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountAddFavorite']>>
>;
export type AccountAddToWatchlistResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['accountAddToWatchlist']>>
>;
export type CertificationMovieListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['certificationMovieList']>>
>;
export type CertificationsTvListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['certificationsTvList']>>
>;
export type ChangesMovieListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['changesMovieList']>>
>;
export type ChangesTvListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['changesTvList']>>
>;
export type ChangesPeopleListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['changesPeopleList']>>
>;
export type CollectionDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['collectionDetails']>>
>;
export type CollectionImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['collectionImages']>>
>;
export type CollectionTranslationsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['collectionTranslations']>>
>;
export type CompanyDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['companyDetails']>>
>;
export type CompanyAlternativeNamesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['companyAlternativeNames']>>
>;
export type CompanyImagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['companyImages']>>
>;
export type CreditDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['creditDetails']>>
>;
export type GenreMovieListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['genreMovieList']>>
>;
export type GenreTvListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['genreTvList']>>
>;
export type GuestSessionRatedMoviesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['guestSessionRatedMovies']>>
>;
export type GuestSessionRatedTvResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['guestSessionRatedTv']>>
>;
export type GuestSessionRatedTvEpisodesResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['guestSessionRatedTvEpisodes']>
  >
>;
export type WatchProvidersAvailableRegionsResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['watchProvidersAvailableRegions']>
  >
>;
export type WatchProvidersMovieListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['watchProvidersMovieList']>>
>;
export type WatchProviderTvListResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['watchProviderTvList']>>
>;
export type KeywordDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['keywordDetails']>>
>;
export type KeywordMoviesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['keywordMovies']>>
>;
export type ListDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listDetails']>>
>;
export type ListDeleteResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listDelete']>>
>;
export type ListCheckItemStatusResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listCheckItemStatus']>>
>;
export type ListCreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listCreate']>>
>;
export type ListAddMovieResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listAddMovie']>>
>;
export type ListRemoveMovieResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listRemoveMovie']>>
>;
export type ListClearResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listClear']>>
>;
export type NetworkDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['networkDetails']>>
>;
export type DetailsCopyResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['detailsCopy']>>
>;
export type AlternativeNamesCopyResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['alternativeNamesCopy']>>
>;
export type ReviewDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['reviewDetails']>>
>;
export type AuthenticationValidateKeyResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getTmdbApi>['authenticationValidateKey']>
  >
>;
export type TvSeasonWatchProvidersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvSeasonWatchProviders']>>
>;
export type ConfigurationCountriesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['configurationCountries']>>
>;
export type ConfigurationJobsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['configurationJobs']>>
>;
export type ConfigurationLanguagesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['configurationLanguages']>>
>;
export type ConfigurationPrimaryTranslationsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTmdbApi>['configurationPrimaryTranslations']
    >
  >
>;
export type ConfigurationTimezonesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['configurationTimezones']>>
>;
export type AuthenticationCreateSessionFromLoginResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTmdbApi>['authenticationCreateSessionFromLogin']
    >
  >
>;
export type PersonLatestIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['personLatestId']>>
>;
export type TvEpisodeChangesByIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeChangesById']>>
>;
export type TvEpisodeGroupDetailsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['tvEpisodeGroupDetails']>>
>;
export type SearchCompanyResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchCompany']>>
>;
export type SearchCollectionResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchCollection']>>
>;
export type SearchKeywordResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['searchKeyword']>>
>;
export type ListsCopyResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getTmdbApi>['listsCopy']>>
>;
